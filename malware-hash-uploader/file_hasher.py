# file: hash_calculator.py
import hashlib

def calculate_hashes(file_path):
    # Initialize hash objects
    hashes = {
        'MD5': hashlib.md5(),
        'SHA-1': hashlib.sha1(),
        'SHA-256': hashlib.sha256()
    }
    try:
        with open(file_path, "rb") as f:
            # Read the file in 4096-byte chunks
            while (chunk := f.read(4096)):
                for algo in hashes.values():
                    algo.update(chunk)
        # Return a dictionary mapping hash names to their hex digests
        print({name: algo.hexdigest() for name, algo in hashes.items()})
        return {name: algo.hexdigest() for name, algo in hashes.items()}
    except Exception as e:
        return f"Error reading file: {e}"

# Input path to file
# calculate_hashes(input("Enter the path to the file: "))